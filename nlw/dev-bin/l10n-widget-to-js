#!/usr/bin/env perl
# @COPYRIGHT@
use strict;
use warnings;
use YAML;

my $in_file = "share/skin/wikiwyg/javascript/Widgets.yaml";
my $out_js_file = "share/skin/wikiwyg/javascript/widget_resource.js";
my $out_pm_file = "lib/Socialtext/Widget_resource.pm";

my $marklist = {
    'title' => '\$',
    'image_text' => '%',
};

my $newtext;

print "Loading Widget.yaml file...";

my $yaml = YAML::LoadFile($in_file);
my $widgets = $yaml->{widgets};
my $fields = $yaml->{fields};

print "ok\n";
print "Writing widget_resouce...";

open FH_JS, "> " . $out_js_file;
open FH_PM, "> " . $out_pm_file;
print FH_JS "<!-- This file is auto-generated by l10n-widget-to-js -->\n";
print FH_PM <<EOT;
#This file is auto-generated by l10n-widget-to-js
use Socialtext::l10n qw/loc/;
EOT

for my $widget_type (@$widgets) {
    my $text = $yaml->{'widget'}->{$widget_type}->{'title'};
    if ( ref $text ) {
        $text = $yaml->{'widget'}->{$widget_type}->{'title'}->{'default'};
        if ( defined $text) {
            $newtext = extract_text('title',  $text ); 
            print FH_JS $newtext . ";\n";
            print FH_PM $newtext . ";\n";
        }
        $text = $yaml->{'widget'}->{$widget_type}->{'title'}->{'full'};
        if ( defined $text ) {
            $newtext = extract_text('title',  $text );
            print FH_JS $newtext . ";\n";
            print FH_PM $newtext . ";\n";
        }
    }else{
        $newtext = extract_text('title',  $text );
        print FH_JS $newtext . ";\n";
        print FH_PM $newtext . ";\n";
    }
}

for my $widget_type (@$widgets) {
    foreach my $x (@{$yaml->{'widget'}->{$widget_type}->{'image_text'}}){
        my $text = $x->{'text'};
        if ( defined $text ) {
            $newtext = extract_text( 'image_text', $text );
            print FH_JS $newtext . ";\n";
            print FH_PM $newtext . ";\n";
        }
    }
}


my @fieldsname = keys %$fields;
foreach (@fieldsname)
{
    my $text = $fields->{$_};
    if ( defined $text) {
        $newtext = extract_text( 'title', $text );
        print FH_JS $newtext . ";\n";
    }
}

close FH_JS;
close FH_PM;

print "ok\n";
print "Finished\n";

sub extract_text
{
    my $type = shift;
    my $text = shift;

    my $newtext = $text; 
    my $newtext_args = "";

    my $mark = $marklist->{$type};
    my @params = $text =~ /${mark}(\w+)/g;

    my $count = 1;
    foreach my $param (@params)
    {
        $newtext =~ s/${mark}$param/[_$count]/;
        $newtext_args .= ", $param";
        $count++;
    }

    if ($newtext_args ne "") {
        $newtext = "loc(\"" . $newtext . "\"" . $newtext_args . ")";
    }else{
        $newtext = "loc(\"" . $newtext . "\")";
    }

    return $newtext;
}
